name: Python package for Linux

on:
  push:
    paths:
      - "setup.py"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
        include:
          - python-version: "3.10"
            cibw-version: "cp310-manylinux_x86_64"
          - python-version: "3.11"
            cibw-version: "cp311-manylinux_x86_64"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BEFORE_BUILD: >
            yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo && 
            yum install --setopt=obsoletes=0 -y cuda-nvcc-12-4-12.4.99-1 cuda-cudart-devel-12-4-12.4.99-1 && 
            export LD_LIBRARY_PATH="/usr/local/lib:/usr/local/cuda/lib64:$LD_LIBRARY_PATH" && export BUILD_WITH_CUDA=1 && 
            python -m pip install -U torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu124 && 
            python -c "import torch,os;print(os.path.join(os.path.dirname(torch.__file__),'lib'))" > /etc/ld.so.conf.d/999_torch.conf && 
            python -m pip install -U auditwheel
          CIBW_BUILD: ${{ matrix.cibw-version }}
          CIBW_ENVIRONMENT: TORCH_CUDA_ARCH_LIST=Turing
          CIBW_BUILD_VERBOSITY: 1
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: "python -m auditwheel repair --exclude 'libtorch*.so' -w {dest_dir} {wheel}"
      - name: Upload
        env:
          PIP_API_TOKEN: ${{ secrets.PIP_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine && 
          python -m twine upload ./wheelhouse/*.whl --username __token__ --password ${PIP_API_TOKEN} --skip-existing
